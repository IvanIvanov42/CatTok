@page "/register"
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="container mt-3">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <fieldset disabled="@isSubmitting">
                <EditForm Model="@model" OnValidSubmit="SubmitAsync">
                    <DataAnnotationsValidator />

                    <div class="mb-3">
                        <label for="username" class="form-label">Username:</label>
                        <InputText @bind-Value="@model.Username" id="username" class="form-control form-control-lg" />
                        <ValidationMessage For="@(() => model.Username)" />
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email:</label>
                        <InputText type="email" @bind-Value="@model.Email" id="email" class="form-control form-control-lg" />
                        <ValidationMessage For="@(() => model.Email)" />
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password:</label>
                        <InputText type="password" @bind-Value="@model.Password" id="password" class="form-control form-control-lg" />
                        <ValidationMessage For="@(() => model.Password)" />
                    </div>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-dark btn-lg" disabled="@isSubmitting">
                            @if (isSubmitting)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <p>Registering...</p>
                            }
                            else
                            {
                                <p>Register</p>
                            }
                        </button>
                    </div>
                </EditForm>
            </fieldset>

            @if (!string.IsNullOrEmpty(errorMsg))
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @errorMsg
                </div>
            }
        </div>
    </div>
</div>

@code {
    private RegisterModel model = new RegisterModel();
    private string? errorMsg;
    private bool isSubmitting = false;

    private async Task SubmitAsync()
    {
        try
        {
            isSubmitting = true;
            errorMsg = null;

            await AuthenticationService.RegisterAsync(model);

            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMsg = ex.Message;
        }
        finally
        {
            isSubmitting = false;
        }
    }
}

@page "/login"
@inject IAuthenticationService AuthenticationService

<fieldset disabled="@(expiration is not null)">
    <EditForm Model="@model" OnValidSubmit="SubmitAsync">
        <div>
            <label for="username">Username:</label>
            <InputText @bind-Value="@model.Username" id="username" name="username" required />
        </div>
        <div>
            <label for="password">Password:</label>
            <InputText typeof="password" @bind-Value="@model.Password" id="password" name="password" required />
        </div>
        <div>
            <button type="submit">Login</button>
        </div>
    </EditForm>
</fieldset>

@if(expiration is not null)
{
    <p>You are logged in till @expiration?.ToLongTimeString()</p>
}

@if(errorMsg is not null)
{
    <p class="error">@errorMsg</p>
}

@code {
    private LoginModel model = new LoginModel();
    private DateTime? expiration;
    private string? errorMsg;

    private async Task SubmitAsync()
    {
        try
        {
            expiration = await AuthenticationService.LoginAsync(model);

            errorMsg = null;
        }
        catch (Exception ex)
        {
            expiration = null;
            errorMsg = ex.Message;
        }
    }
}
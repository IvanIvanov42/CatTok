@inject NavigationManager NavigationManager
@inject IInstagramService InstagramService
@inject IAuthenticationService AuthenticationService
@inject AuthenticationState AuthenticationState

<div class="container">
    <div class="row">
        <h1 class="text-center">CatTok</h1>
    </div>
    <div class="row">
        <p style="font-size:20px;">
            CatTok is the best website in the world!<br />
            Embark on an adventure to uncover a myriad of enchanting felines!
        </p>

        <div>
            @if (AuthenticationState.IsLoggedIn)
            {
                <p>How to show-off your cat?</p>
                <ul style="list-style-image: url('img/cat.svg');">
                    <li>Connect your cat’s IG account!</li>
                    <li>Use a spare phone to showcase your cat!</li>
                </ul>
                <div class="row justify-content-center" style="margin-top: 60px;">
                    <button class="btn btn-outline-dark btn-lg" type="button" @onclick="CallInstagram">Connect</button>
                </div>
            }
            else
            {
                <p>Please log in to connect your cat!</p>
                <Login />
            }
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        AuthenticationState.AuthenticationStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        AuthenticationState.AuthenticationStateChanged -= StateHasChanged;
    }

    protected async Task CallInstagram()
    {
        try
        {
            var response = await InstagramService.GetSecrets();
            var clientId = response.ClientId;
            var redirectUri = response.RedirectUri;

            NavigationManager.NavigateTo($"https://api.instagram.com/oauth/authorize?client_id={clientId}&redirect_uri={redirectUri}&scope=user_profile,user_media&response_type=code");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching secrets: {ex.Message}");
        }
    }
}
